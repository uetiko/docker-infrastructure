version: "3.1"

services:
    database:
        image: mysql:8.0
        container_name: mysqldb
        hostname: mysqldb
        restart: always
        user: ":${HOST_USER_ID}"
        environment:
            MYSQL_ROOT_PASSWORD: tHezUfru#7E=e2Ud#
            MYSQL_DATABASE: services
            MYSQL_USER: service
            MYSQL_PASSWORD: PASSWD
        ports:
            - 3306:3306
        volumes:
            - ./databases/storage/mysqldb:/var/lib/mysql

    redis:
        image: redis
        container_name: cache
        hostname: "${HOST_NAME}"

    php.test:
        build:
            context: .
            dockerfile: ./dockerfiles/php/74/Dockerfile
        container_name: "php.${HOST_NAME}"
        hostname: "php.${HOST_NAME}"
        user: ":${HOST_USER_ID}"
        restart: always
        environment:
            ACCOUNT: "${HOST_NAME}"
            DATE_TIMEZONE: America/Mexico_City
            REQUEST_TIMEOUT: 60
            MAX_INPUT_TIME: 60
            POST_MAX_SIZE: 30M
            DOCKER_USER: www-data
            DOCKER_GROUP: www-data
            HOST_USER_ID: ${HOST_USER_ID}
            HOST_GROUP_ID: ${HOST_GROUP_ID}
        depends_on:
            - database
            - redis
        ports:
            - 8080:80
            - 4433:443
        volumes:
            - ./shared/server/ssl:/etc/ssl/certs/local:rw
            - ./shared/projects/backend/php/info/:/var/info.${HOST_NAME}/www/:rw

    web:
        build:
            context: .
            dockerfile: dockerfiles/web/angular/Dockerfile
        container_name: "frontend.${HOST_NAME}"
        hostname: "frontend.${HOST_NAME}"
        user: ":${HOST_USER_ID}"
        restart: always
        environment:
            ACCOUNT: "${HOST_NAME}"
            DOCKER_USER: www-data
            DOCKER_GROUP: www-data
            HOST_USER_ID: ${HOST_USER_ID}
            HOST_GROUP_ID: ${HOST_GROUP_ID}
        depends_on:
            - redis
        ports:
            - 4200:4200
        tty: true
        volumes:
            - ./shared/web/ssl:/etc/ssl/certs/local:rw
            - ./shared/projects/frontend/node/:/var/www:rw
            - ./shared/projects/frontend/static/html/:/var/html.${HOST_NAME}/www/:rw
            - ./shared/projects/frontend/node/angular/:/var/angular.${HOST_NAME}/www/:rw

    python:
        build: 
            context: .
            dockerfile: ./dockerfiles/python/Dockerfile
        container_name: "python.${HOST_NAME}"
        hostname: "python.${HOST_NAME}"
        user: ":${HOST_USER_ID}"
        restart: always
        environment:
            ACCOUNT: "${HOST_NAME}"
            DOCKER_USER: www-data
            DOCKER_GROUP: www-data
            HOST_USER_ID: ${HOST_USER_ID}
            HOST_GROUP_ID: ${HOST_GROUP_ID}
        tty: true
        depends_on:
            - database
            - redis
        volumes:
            - ./shared/projects/backend/python/:/opt/source/:rw

    nginx:
        build:
            context: .
            dockerfile: ./dockerfiles/nginx/Dockerfile
        container_name: "nginx"
        hostname: nginx
        user: ":${HOST_USER_ID}"
        restart: always
        environment:
            DOCKER_USER: www-data
            DOCKER_GROUP: www-data
            HOST_USER_ID: ${HOST_USER_ID}
            HOST_GROUP_ID: ${HOST_GROUP_ID}
        depends_on:
            - php.test
            - web
            - python
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./shared/projects/backend/php/info/:/var/info.${HOST_NAME}/www/:rw
            - ./shared/projects/frontend/static/html/:/var/html.${HOST_NAME}/www/:rw
            - ./shared/projects/frontend/node/angular/:/var/angular.${HOST_NAME}/www/:rw
            - ./etc/infrastructure/nginx/conf.d/:/etc/nginx/conf.d/
            - ./shared/server/ssl/:/etc/ssl/certs/local:rw